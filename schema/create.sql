--SQL created using javax.persistence.schema-generation

CREATE SEQUENCE AUDIT_TRAIL_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE CATALOG_SEQ START
	WITH 1 INCREMENT BY 1;
	
CREATE SEQUENCE CATALOG_ITEM_SEQ START
	WITH 1 INCREMENT BY 1;
	
CREATE SEQUENCE CATALOG_ITEM_ATTRIBUTE_SEQ START
	WITH 1 INCREMENT BY 1;
	
CREATE SEQUENCE CATALOG_ITEM_PRICE_SEQ START 
	WITH 1 INCREMENT BY 1;
	
CREATE SEQUENCE COMPANY_ADDRESS_ID_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE COMPANY_CHANGE_LOG_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE COMPANY_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE ECLASS_CODE_LKUP_ID_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE FAIL_CODE_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE GTIN_ID_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE HIBC_ID_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE IMPORT_TRANSACTION_ID_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE ITEM_ASSET_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE ITEM_ATTRIBUTE_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE ITEM_BARCODE_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE ITEM_CHANGE_LOG_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE ITEM_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE ITEM_TAXONOMY_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE SIC_CODE_LKUP_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE SUBSTITUTE_ITEM_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE TAX_TYPES_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE TRIAGE_ACTION_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE TRIAGE_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE UNSPSC_CODE_LKUP_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE UOM_LOOKUP_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE SEQUENCE USER_SEQ START
	WITH 1 INCREMENT BY 1;

CREATE TABLE AUDIT_TRAIL (
	ID NUMBER(10, 0) NOT NULL,
	COMMENTS VARCHAR2(255 CHAR),
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DISPLAY_TEXT VARCHAR2(4000 CHAR),
	DOCUMENT_NO VARCHAR2(255 CHAR) NOT NULL,
	STATUS_ADDTL_INFO VARCHAR2(100 CHAR),
	STATUS_ID NUMBER(10, 0) NOT NULL,
	FAIL_CODE_ID NUMBER(10, 0),
	PRIMARY KEY (ID)
	);

CREATE TABLE AUTH (
	AUTH_NAME VARCHAR2(50 CHAR) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	PRIMARY KEY (AUTH_NAME)
	);

CREATE TABLE CATALOG(
    ID NUMBER(10,0) NOT NULL,
    ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
    DATE_ROW_ADDED   TIMESTAMP NOT NULL,
    DATE_ROW_UPDATED TIMESTAMP NOT NULL,
    DESCRIPTION      VARCHAR2(255),
    KEY              VARCHAR2(50),
    NAME             VARCHAR2(50),
    SITE             VARCHAR2(50),
    TYPE             VARCHAR2(10),
    VERSION NUMBER(6,0),
    COMPANY_ID NUMBER(10,0),
    ORGANISATION_ID NUMBER(10,0),
    PARENT_CATALOG_ID NUMBER(10,0),
    PRIMARY KEY (ID)
  );
	
CREATE TABLE CATALOG_ITEM (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	DESCRIPTION VARCHAR2(255 CHAR),
	EXPENSE_CODE VARCHAR2(10 CHAR) NOT NULL,
	HCTED VARCHAR2(10 CHAR) NOT NULL,
	ITEM_BAND VARCHAR2(10 CHAR),
	NAME VARCHAR2(50 CHAR),
	PENDING_FROM VARCHAR2(10 CHAR) NOT NULL,
	PREFERRED_ITEM_ORDER VARCHAR2(10 CHAR),
	SUPPLIER_PART_NO VARCHAR2(100 CHAR),
	TYPE VARCHAR2(10 CHAR),
	UOM_QTY NUMBER(10, 0),
	VALIDATED VARCHAR2(1 CHAR) NOT NULL,
	ITEM_ID NUMBER(10, 0),
	SUBSTITUTE_ITEM_ID NUMBER(10, 0) NOT NULL,
	PRIMARY KEY (ID)
	);

CREATE TABLE CATALOG_CHILD_ITEM (
    CATALOG_ID NUMBER(10,0) NOT NULL,
    CATALOG_ITEM_ID NUMBER(10,0) NOT NULL,
    PRIMARY KEY (CATALOG_ID, CATALOG_ITEM_ID)
);

CREATE TABLE CATALOG_ITEM_ATTRIBUTE
  (
    ID NUMBER(10,0) NOT NULL,
    ACTIVE_FLAG      VARCHAR2(1 CHAR) NOT NULL,
    DATE_ROW_ADDED   TIMESTAMP NOT NULL,
    DATE_ROW_UPDATED TIMESTAMP NOT NULL,
    KEY              VARCHAR(50),
    VALUE            VARCHAR(255),
    CATALOG_ITEM_ID NUMBER(10,0),
    PRIMARY KEY (ID)
 );

 CREATE TABLE CATALOG_ITEM_PRICE
  (
    ID                  NUMBER(19,0) NOT NULL,
    ACTIVE_FLAG         VARCHAR2(1 CHAR) NOT NULL,
    CURRENCY            VARCHAR2(3 CHAR),
    DATE_ROW_ADDED      TIMESTAMP NOT NULL,
    DATE_ROW_UPDATED    TIMESTAMP NOT NULL,
    LEAD_TIME           VARCHAR2(50 CHAR),
    NET_AMOUNT          NUMBER(10,4) NOT NULL,
    MAX_ORDER_QTY       NUMBER(10,0),
    MIN_ORDER_QTY       NUMBER(10,0),
    PRICE_BREAK_MAX_QTY NUMBER(10,0),
    PRICE_BREAK_MIN_QTY NUMBER(10,0),
    PRICE_BREAK_STYLE   NUMBER(10,0),
    PRICE_TYPE          VARCHAR2(16 CHAR),
    TAX                 VARCHAR2(50 CHAR),
    VALID_FROM          TIMESTAMP,
    VALID_TO            TIMESTAMP,
    CATALOG_ITEM_ID     NUMBER(19,0),
    PRIMARY KEY (ID)
  );
	
CREATE TABLE COMPANY (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	COMPANIES_HOUSE_NO VARCHAR2(100 CHAR),
	COMPANY_NAME VARCHAR2(100 CHAR),
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	DUNS_NO VARCHAR2(100 CHAR),
	NUTS_CODE VARCHAR2(10 CHAR),
	REFRESH VARCHAR2(1 CHAR) NOT NULL,
	STATUS VARCHAR2(20 CHAR),
	ADDRESS_ID NUMBER(10, 0),
	SIC_CODE_ID NUMBER(10, 0),
	PRIMARY KEY (ID)
	);

CREATE TABLE COMPANY_ADDRESS (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	ADDRESS_NAME VARCHAR2(50 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	GLN VARCHAR2(15 CHAR) NOT NULL,
	LINE1 VARCHAR2(255 CHAR),
	LINE2 VARCHAR2(255 CHAR),
	LINE3 VARCHAR2(255 CHAR),
	NUTS_CODE VARCHAR2(10 CHAR),
	POSTAL_CODE VARCHAR2(10 CHAR),
	PRIMARY KEY (ID)
	);

CREATE TABLE COMPANY_CHANGE_LOG (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	INFORMATION VARCHAR2(500 CHAR),
	TYPE VARCHAR2(10 CHAR),
	COMPANY_ID NUMBER(10, 0),
	IMPORT_ID NUMBER(10, 0),
	PRIMARY KEY (ID)
	);

CREATE TABLE ECLASS_CODES_LKUP (
	ECLASS_CODE_LKUP_ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	CODE VARCHAR2(10 CHAR),
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	DESCRIPTION VARCHAR2(255 CHAR),
	DESCRIPTION_MSG_KEY VARCHAR2(255 CHAR),
	PRIMARY KEY (ECLASS_CODE_LKUP_ID)
	);

CREATE TABLE FAIL_CODE (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	DESCRIPTION VARCHAR2(50 CHAR),
	NAME VARCHAR2(50 CHAR),
	TEXT VARCHAR2(100 CHAR),
	PRIMARY KEY (ID)
	);

CREATE TABLE GTIN (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	BARCODE_VALIDATION_ID NUMBER(10, 0),
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	GTIN NUMBER(10, 0) NOT NULL,
	TEXT VARCHAR2(14 CHAR) NOT NULL,
	TYPE VARCHAR2(50 CHAR) NOT NULL,
	IMPORT_TRANSACTION_ID NUMBER(10, 0),
	PRIMARY KEY (ID)
	);

CREATE TABLE HIBC (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	BARCODE_VALIDATION_ID NUMBER(10, 0),
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	HIBC VARCHAR2(50 CHAR) NOT NULL,
	IMPORT_TRANSACTION_ID NUMBER(10, 0),
	PRIMARY KEY (ID)
	);

CREATE TABLE IMPORT_TRANSACTIONS (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	DESCRIPTION VARCHAR2(500 CHAR),
	PRIMARY KEY (ID)
	);

CREATE TABLE ITEM (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	DESCRIPTION VARCHAR2(255 CHAR),
	GS1_GPC_CODE NUMBER(10, 0),
	LONG_DESCRIPTION VARCHAR2(500 CHAR),
	MSRP FLOAT,
	NAME VARCHAR2(100 CHAR),
	REPLACEMENT_MFGR_NO VARCHAR2(100 CHAR),
	SYNONYMS VARCHAR2(500 CHAR),
	TYPE VARCHAR2(10 CHAR),
	UOM VARCHAR2(10 CHAR),
	PRIMARY KEY (ID)
	);

CREATE TABLE ITEM_ASSET (
	ID NUMBER(10, 0) NOT NULL,
	ITEM_ID NUMBER(10, 0),
	TYPE VARCHAR2(10 CHAR),
	RESOURCE_LOCATION VARCHAR2(500 CHAR),
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	PRIMARY KEY (ID)
	);

CREATE TABLE ITEM_ATTRIBUTE (
	ID NUMBER(10, 0) NOT NULL,
	ITEM_ID NUMBER(10, 0),
	TYPE VARCHAR2(10 CHAR),
	KEY VARCHAR2(50 CHAR),
	VALUE VARCHAR2(255 CHAR),
	ATTRIBUTE_ID VARCHAR2(10 CHAR),
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	PRIMARY KEY (ID)
	);

CREATE TABLE ITEM_BARCODE (
	ID NUMBER(10, 0) NOT NULL,
	ITEM_ID NUMBER(10, 0) NOT NULL,
	TYPE VARCHAR2(10 CHAR),
	CODE VARCHAR2(20 CHAR),
	CODE_INT NUMBER(10, 0),
	CODE_STRING VARCHAR2(10 CHAR),
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	PARENT_ITEM_BARCODE_ID(10, 0),
	PRIMARY KEY (ID)
	);

CREATE TABLE ITEM_CHANGE_LOG (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	INFORMATION VARCHAR2(500 CHAR),
	TYPE VARCHAR2(10 CHAR),
	ITEM_ID NUMBER(10, 0),
	PRIMARY KEY (ID)
	);

CREATE TABLE ITEM_TAXONOMY (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	ASSET_TYPE VARCHAR2(10 CHAR),
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	RESOURCE_LOCATION VARCHAR2(500 CHAR),
	ITEM_ID NUMBER(10, 0) NOT NULL,
	PRIMARY KEY (ID)
	);

CREATE TABLE SIC_CODES_LKUP (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	DESCRIPTION VARCHAR2(255 CHAR),
	DESCRIPTION_MSG_KEY VARCHAR2(255 CHAR),
	SIC_CODE VARCHAR2(50 CHAR),
	PRIMARY KEY (ID)
	);

CREATE TABLE SUBSTITUTE_ITEM (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	SUPPLIER_PART_NO VARCHAR2(50 CHAR),
	PRIMARY KEY (ID)
	);

CREATE TABLE TAX_TYPES (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	DESCRIPTION VARCHAR2(255 CHAR) NOT NULL,
	KEY VARCHAR2(30 CHAR) NOT NULL,
	PERCENTAGE DOUBLE PRECISION NOT NULL,
	PRIMARY KEY (ID)
	);

CREATE TABLE TRIAGE (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_PROCESSED TIMESTAMP NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	EMAIL_BODY VARCHAR2(2000 CHAR),
	EMAIL_SUBJECT VARCHAR2(500 CHAR),
	EMAIL_TO VARCHAR2(200 CHAR),
	INCLUDE_ATTACHMENT VARCHAR2(1 CHAR) NOT NULL,
	TRIAGE_NOTES VARCHAR2(500 CHAR),
	TRIAGE_ACTION_ID NUMBER(10, 0),
	USER_ID NUMBER(10, 0),
	PRIMARY KEY (ID)
	);

CREATE TABLE TRIAGE_ACTION (
	ID NUMBER(10, 0) NOT NULL,
	ACTION VARCHAR2(255 CHAR),
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	PRIMARY KEY (ID)
	);

CREATE TABLE UNSPSC_CODES_LKUP (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	CODE VARCHAR2(50 CHAR),
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	KEY VARCHAR2(50 CHAR),
	PARENT_KEY VARCHAR2(50 CHAR),
	TITLE VARCHAR2(255 CHAR),
	TITLE_MSG_KEY VARCHAR2(255 CHAR),
	PRIMARY KEY (ID)
	);

CREATE TABLE UOM_LOOKUP (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	LABEL VARCHAR2(50 CHAR),
	LABEL_DESCR_MSG_KEY VARCHAR2(50 CHAR),
	PRIMARY KEY (ID)
	);

CREATE TABLE USER_AUTH (
	AUTH_NAME VARCHAR2(50 CHAR) NOT NULL,
	USER_ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	CAN_DELETE VARCHAR2(1 CHAR),
	CAN_READ VARCHAR2(1 CHAR),
	CAN_WRITE VARCHAR2(1 CHAR),
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	PRIMARY KEY (
		AUTH_NAME,
		USER_ID
		)
	);

CREATE TABLE USERS (
	ID NUMBER(10, 0) NOT NULL,
	ACTIVE_FLAG VARCHAR2(1 CHAR) NOT NULL,
	DATE_ROW_ADDED TIMESTAMP NOT NULL,
	DATE_ROW_UPDATED TIMESTAMP NOT NULL,
	FIRST_NAME VARCHAR2(50 CHAR) NOT NULL,
	LAST_NAME VARCHAR2(50 CHAR) NOT NULL,
	PASSWORD VARCHAR2(50 CHAR) NOT NULL,
	USER_NAME VARCHAR2(50 CHAR) NOT NULL,
	PRIMARY KEY (ID)
	);

ALTER TABLE USER_AUTH ADD CONSTRAINT UK_DMU723RU3IQIGKD6Q2NH6P1XF UNIQUE (AUTH_NAME);
ALTER TABLE USER_AUTH ADD CONSTRAINT UK_ND1CBJAPGBP1COHKRLHQ2JKY4 UNIQUE (USER_ID);

ALTER TABLE AUDIT_TRAIL ADD CONSTRAINT FK_AUDIT_TRAIL_FAIL_CODE_ID FOREIGN KEY (FAIL_CODE_ID) REFERENCES FAIL_CODE;

ALTER TABLE CATALOG ADD CONSTRAINT FK_CATALOG_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY;
ALTER TABLE CATALOG ADD CONSTRAINT FK_CATALOG_ORG_ID FOREIGN KEY (ORGANISATION_ID) REFERENCES ORGANISATION;
ALTER TABLE CATALOG ADD CONSTRAINT FK_CATALOG_ID FOREIGN KEY (PARENT_CATALOG_ID) REFERENCES CATALOG;

ALTER TABLE CATALOG_ITEM ADD CONSTRAINT FK_CATALOG_ITEM_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES ITEM;
ALTER TABLE CATALOG_ITEM ADD CONSTRAINT FK_CATALOG_ITEM_SUBSTITUTE_ITEM_ID FOREIGN KEY (SUBSTITUTE_ITEM_ID) REFERENCES SUBSTITUTE_ITEM;

ALTER TABLE CATALOG_CHILD_ITEM ADD CONSTRAINT FK_CATALOG_ITEM_CHILD_ID FOREIGN KEY (CATALOG_ITEM_ID) REFERENCES CATALOG_ITEM;
ALTER TABLE CATALOG_CHILD_ITEM ADD CONSTRAINT FK_CATALOG_CHILD_ID FOREIGN KEY (CATALOG_ID) REFERENCES CATALOG;

ALTER TABLE CATALOG_ITEM_ATTRIBUTE ADD CONSTRAINT FK_CATALOG_ITEM_ID FOREIGN KEY (CATALOG_ITEM_ID) REFERENCES CATALOG_ITEM;

ALTER TABLE CATALOG_ITEM_PRICE ADD CONSTRAINT FK_CATALOG_ITEM_PRICE_ID FOREIGN KEY (CATALOG_ITEM_ID) REFERENCES CATALOG_ITEM;

ALTER TABLE COMPANY ADD CONSTRAINT FK_COMPANY_ADDRESS_ID FOREIGN KEY (ADDRESS_ID) REFERENCES COMPANY_ADDRESS;
ALTER TABLE COMPANY ADD CONSTRAINT FK_COMPANY_SIC_CODE_ID FOREIGN KEY (SIC_CODE_ID) REFERENCES SIC_CODES_LKUP;

ALTER TABLE COMPANY_CHANGE_LOG ADD CONSTRAINT FK_COMPANY_CHANGE_LOG_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES COMPANY;
ALTER TABLE COMPANY_CHANGE_LOG ADD CONSTRAINT FK_COMPANY_CHANGE_LOG_IMPORT_ID FOREIGN KEY (IMPORT_ID) REFERENCES IMPORT_TRANSACTIONS;

ALTER TABLE GTIN ADD CONSTRAINT FK_GTIN_IMPORT_TRANSACTION_ID FOREIGN KEY (IMPORT_TRANSACTION_ID) REFERENCES IMPORT_TRANSACTIONS;

ALTER TABLE HIBC ADD CONSTRAINT FK_HIBC_IMPORT_TRANSACTION_ID FOREIGN KEY (IMPORT_TRANSACTION_ID) REFERENCES IMPORT_TRANSACTIONS;

ALTER TABLE ITEM_ASSET ADD CONSTRAINT FK_ITEM_ASSET_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES ITEM;

ALTER TABLE ITEM_ATTRIBUTE ADD CONSTRAINT FK_ITEM_ATTRIBUTE_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES ITEM;

ALTER TABLE ITEM_BARCODE ADD CONSTRAINT FK_ITEM_BARCODE_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES ITEM;

ALTER TABLE ITEM_CHANGE_LOG ADD CONSTRAINT FK_ITEM_CHANGE_LOG_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES ITEM;

ALTER TABLE ITEM_TAXONOMY ADD CONSTRAINT FK_ITEM_TAXONOMY_BARCODE_ITEM_ID FOREIGN KEY (ITEM_ID) REFERENCES ITEM;

ALTER TABLE TRIAGE ADD CONSTRAINT FK_TRIAGE_TRIAGE_ACTION_ID FOREIGN KEY (TRIAGE_ACTION_ID) REFERENCES TRIAGE_ACTION;

ALTER TABLE TRIAGE ADD CONSTRAINT FK_TRIAGE_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS;

ALTER TABLE USER_AUTH ADD CONSTRAINT FK_USER_AUTH_AUTH_NAME FOREIGN KEY (AUTH_NAME) REFERENCES AUTH;
ALTER TABLE USER_AUTH ADD CONSTRAINT FK_USER_AUTH_USER_ID FOREIGN KEY (USER_ID) REFERENCES USERS;